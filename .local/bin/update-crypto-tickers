#!/usr/bin/env -S uv run --quiet --script
# /// script
# dependencies = ["httpx", "pandas", "rich"]
# requires-python = ">=3.12"
# ///
# vim: set filetype=python :

import sys
import asyncio

import httpx


ticker_url = "https://api.binance.com/api/v3/ticker/price?symbol={}USDT".format


async def get_price(client: httpx.AsyncClient, symbol: str):
    try:
        response = await client.get(ticker_url(symbol.upper().strip()), timeout=10)
        response.raise_for_status()
        data = response.json()
        return symbol, float(data["price"])
    except Exception as e:
        print(f"Error fetching price for {symbol}: {e}")
        raise e


async def fetch_prices(symbols):
    async with httpx.AsyncClient() as client:
        tasks = [get_price(client, symbol) for symbol in symbols]
        return await asyncio.gather(*tasks)


def main():
    symbols = [
        "BTC",
        "USDC",
        "SOL",
        "BNB",
        "ETH",
        "ADA",
        "XRP",
        "TRX",
        "LINK",
        "DOT",
        "SUI",
        "AVAX",
        "UNI",
        "AAVE",
        "CAKE",
        "BAKE",
    ]
    copy_mode = "--copy" in sys.argv

    if not copy_mode:
        print("Fetching prices:")

    prices = asyncio.run(fetch_prices(symbols))

    for symbol, price in prices:
        if copy_mode:
            print(f"{price:,.4f}".replace(",", "").replace(".", ","))
        else:
            print(f"{symbol:>4} - USDT {price:>10,.2f}")


if __name__ == "__main__":
    main()
